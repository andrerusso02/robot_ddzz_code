<launch>
    <!--arg name="model" default="$(env DIFFBOT_MODEL)" doc="model type [diffbot, remo]"/-->
    <arg name="model" default="diffbot" doc="model type [diffbot, remo]"/>
    
    <!-- The `minimal.launch` is used to load the DiffBot's robot descripton
        and the controller configuration onto the ROS parameter server using the launch file from the 
        `diffbot_base` package (https://fjp.at/projects/diffbot/ros-packages/base/). 
        It will also setup the ROS controller manager (http://wiki.ros.org/controller_manager) with 
        DiffBot's hardware interface https://fjp.at/projects/diffbot/ros-packages/base/#hardware-interface.
        For the motor driver the node `motor_driver.py` from the `grove_motor_driver` package is started.
        And for the encoders rosserial communicates with the Teensy microcontroller to publish the encoder ticks. 
    -->

    <include file="$(find diffbot_bringup)/launch/minimal.launch">
        <arg name="model" value="$(arg model)" />
    </include>

    <!-- Starting robot state publish which will publish tf -->
    <!-- This is needed to publish transforms between all links -->
    <!-- diff_drive_controller publishes only a single transfrom between odom and base_footprint -->
    <!-- The robot_state_publisher reads the joint states published by ros control's joint_state_controller -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        output="screen" ns="diffbot" />
    
    <node pkg="tf2_ros" type="static_transform_publisher" name="tf_lidar_publisher" args="0 0 0.35 0 0 0  base_footprint neato_laser" />

    <node name="neato_laser_publisher" pkg="xv_11_laser_driver" type="neato_laser_publisher" output="screen">
        <param name="port" type="string" value="/dev/ttyUSB1" />
    </node>

    <include file="$(find ddzz_pose_estimation)/launch/pose_estimation3.launch"/>

    <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="tf_camera_publisher" args="0 0 0.35 0 0 0  base_footprint camera" /> -->

    <!-- <node name="cv_camera_node" pkg="cv_camera" type="cv_camera_node" output="screen">
        <param name="cv_camera/device_id" value="0"/>
    </node>  -->


    <rosparam file="$(find ddbot_control)/config/ddbot_control.yaml" />
          <node name="ddbot_base_controler"  pkg="controller_manager" type="spawner" args="mobile_base_controller" required="true"/>
      <node name="ddbot_base"  pkg="ddbot_base" type="ddbot_base" required="true"/>
</launch>


